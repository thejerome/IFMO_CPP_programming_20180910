//В обувном магазине продается обувь разного размера. 
// Известно, что одну пару обуви можно надеть на другую, 
// если она хотя бы на три размера больше. 
// В магазин пришел покупатель. 
// Требуется определить, какое наибольшее количество пар обуви сможет предложить ему продавец так,
// чтобы он смог надеть их все одновременно.
//
//Входные данные
//
//Сначала вводится размер ноги покупателя 
// (обувь меньшего размера он надеть не сможет),
// затем количество пар обуви в магазине и размер каждой пары.
// Размер — натуральное число, не превосходящее 100, 
// количество пар обуви в магазине не превосходит 1000.
//
//Выходные данные
//
//Выведите единственное число — максимальное количество пар обуви.
//
//Sample Input:
//
//26
//5
//30 35 40 41 42
//Sample Output:
//
//3

#include "t02_shoes.h"
#include <iostream>
#include <vector>
#include <algorithm>


using namespace std;
int n, result=0;
vector<int> a;

void wear(int size, int amount, int pos) {
    for (int i=pos; i<n; i++)
        if (a[i] > size+2) wear(a[i],amount+1,i+1);
    result = max(result,amount);
}

int t02_shoes() {
    int size_s;
    cin >> size_s >> n;
    for (int i=0; i<n; i++) {
        int ai;
        cin >> ai;
        a.push_back(ai);
    }
    for (int i=0; i<n; i++)
        if (a[i] >= size_s) {wear(a[i],1,i+1); cout << result; return 0;}
    cout << result;
    return 0;
}
