//Дано число N. Определите, сколькими способами можно расставить на доске N×N N ферзей, не бьющих друг друга.
//
//Формат входных данных
//        Задано единственное число N. (N ≤ 10)
//
//Формат выходных данных
//        Выведите ответ на задачу.
//Подсказка
//        Напишите рекурсивную функцию, которая пытается поставить ферзя в очередной столбец. 
// Если на эту клетку ставить ферзя нельзя (он бьет предыдущих), 
// то такой вариант даже не стоит рассматривать. 
// Когда вы успешно поставили ферзя в последний столбец - увеличивайте счетчик.
//Sample Input:
//
//8
//Sample Output:
//
//92

#include <iostream>
#include <vector>

using namespace std;
void queen(int m, int l, int* a, int n, int* ans) {
    int k = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (*(a + i * n + j) == 1) {
                if ((m != i) && (l != j) && (abs(m - i) != abs(l - j)))
                    k++;
            }
        }
    }

    if (k == l) {
        if (l== n - 1)
            (*ans)++;

        *(a + m * n + l) = 1;
        if (l < n - 1) {
            for (int i = 0; i < n; i++)
                queen(i, l + 1, a, n, ans);
        }
        *(a + m * n + l) = 0;
    }

}

int t08_queen(){
    int n, ans = 0;
    cin >> n;
    int a[n][n];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            a[i][j] = 0;

    for (int i = 0; i < n; i++)
        queen(i, 0, (int*) a, n, &ans);
    cout << ans;


    return 0;

}


